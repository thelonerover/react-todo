{"version":3,"sources":["actions/index.js","components/Link/index.js","containers/FilterLink/index.js","components/Filter/index.js","containers/Input/index.js","components/Todo/index.js","components/TodoList/index.js","containers/VisibleTodoList/index.js","components/RemoveCompleted/index.js","containers/RemoveCompletedLink/index.js","components/App/index.js","serviceWorker.js","reducers/todos.js","reducers/visibilityFilter.js","reducers/index.js","store/index.js","index.js"],"names":["nextTodoId","VisibilityFilters","Link","active","children","onClick","className","href","e","preventDefault","FilterLink","connect","state","ownProps","filter","visibilityFilter","dispatch","type","Footer","AddTodo","input","onSubmit","text","value","trim","id","ref","node","Todo","completed","TodoList","todos","onTodoClick","map","todo","key","getVisibleTodos","t","VisibleTodoList","toggleTodo","RemoveCompleted","hasCompletedTodos","hasTodos","length","hasCompleted","Input","Filter","RemoveCompletedLink","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","action","combineReducers","store","createStore","reducer","__REDUX_DEVTOOLS_EXTENSION__","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.fa298307.chunk.js","sourcesContent":["let nextTodoId = 0;\r\n\r\nexport const addTodo = (text) => ({\r\n    type: \"ADD_TODO\",\r\n    id: nextTodoId++,\r\n    text\r\n});\r\n\r\nexport const toggleTodo = (id) => ({\r\n    type: \"TOGGLE_TODO\",\r\n    id\r\n});\r\n\r\nexport const removeCompletedTodos = () => ({\r\n    type: \"REMOVE_COMPLETED_TODOS\"\r\n})\r\n\r\nexport const setVisibilityFilter = (filter) => ({\r\n    type: \"SET_VISIBILITY_FILTER\",\r\n    filter\r\n});\r\n\r\nexport const VisibilityFilters = {\r\n    SHOW_ALL: \"SHOW_ALL\",\r\n    SHOW_COMPLETED: \"SHOW_COMPLETED\",\r\n    SHOW_ACTIVE: \"SHOW_ACTIVE\"\r\n};","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nconst Link = ({ active, children, onClick }) => {\r\n  return (\r\n    <a\r\n      className={active ? \"link link_active\" : \"link\"}\r\n      href=\"\"\r\n      onClick={e => {\r\n        e.preventDefault()\r\n        onClick()\r\n      }}\r\n    >\r\n      {children}\r\n    </a>\r\n  )\r\n}\r\n\r\nLink.propTypes = {\r\n  active: PropTypes.bool.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n  onClick: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Link;","import { connect } from \"react-redux\";\r\nimport { setVisibilityFilter } from \"../../actions\";\r\nimport Link from \"../../components/Link\";\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        active: ownProps.filter === state.visibilityFilter\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        onClick: () => {\r\n            dispatch(setVisibilityFilter(ownProps.filter));\r\n        }\r\n    }\r\n}\r\n\r\nconst FilterLink = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Link);\r\n\r\nexport default FilterLink;","import React from \"react\";\r\nimport FilterLink from \"../../containers/FilterLink\";\r\nimport { VisibilityFilters } from \"../../actions\";\r\n\r\nconst Footer = () => (\r\n  <div className=\"filter\">\r\n    <FilterLink filter={VisibilityFilters.SHOW_ALL}>All</FilterLink>\r\n    <span className=\"filter__separator\">/</span>\r\n    <FilterLink filter={VisibilityFilters.SHOW_ACTIVE}>Active</FilterLink>\r\n    <span className=\"filter__separator\">/</span>\r\n    <FilterLink filter={VisibilityFilters.SHOW_COMPLETED}>Completed</FilterLink>\r\n  </div>\r\n);\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addTodo } from \"../../actions\";\r\n\r\nlet AddTodo = ({ dispatch }) => {\r\n    let input;\r\n\r\n    return (\r\n        <form\r\n            className=\"input\"\r\n            onSubmit={e => {\r\n                e.preventDefault()\r\n                if (!input.value.trim()) {\r\n                    return;\r\n                }\r\n                dispatch(addTodo(input.value))\r\n                input.value = \"\"\r\n            }}\r\n        >\r\n            <input\r\n                className=\"input__field\"\r\n                ref={node => {\r\n                    input = node\r\n                }}\r\n            />\r\n            <button className=\"input__btn\" type=\"submit\">Add</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nAddTodo = connect()(AddTodo);\r\n\r\nexport default AddTodo;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\"\r\n\r\nconst Todo = ({ onClick, completed, text }) => (\r\n    <li\r\n        onClick = {onClick}\r\n        className = {completed ? \"todo-list__item todo-list__item_completed\" : \"todo-list__item\"}\r\n    >\r\n        {text}\r\n    </li>\r\n);\r\n\r\nTodo.propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n    completed: PropTypes.bool.isRequired,\r\n    text: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Todo;","import React from \"react\";\r\nimport Todo from \"../Todo\";\r\nimport PropTypes from \"prop-types\"\r\n\r\nconst TodoList = ({ todos, onTodoClick }) => (\r\n    <ul className=\"todo-list\">\r\n        {todos.map((todo) => (\r\n            <Todo key={todo.id} {...todo} onClick={() => onTodoClick(todo.id)} />\r\n        ))}\r\n    </ul>\r\n);\r\n\r\nTodoList.propTypes = {\r\n    todos: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.number.isRequired,\r\n            completed: PropTypes.bool.isRequired,\r\n            text: PropTypes.string.isRequired\r\n        }).isRequired\r\n    ).isRequired,\r\n    onTodoClick: PropTypes.func.isRequired\r\n}\r\n\r\nexport default TodoList;","/* eslint-disable default-case */\r\nimport { connect } from 'react-redux';\r\nimport { toggleTodo } from '../../actions';\r\nimport TodoList from '../../components/TodoList';\r\n\r\nconst getVisibleTodos = (todos, filter) => {\r\n    switch (filter) {\r\n        case 'SHOW_ALL': \r\n            return todos;\r\n        case 'SHOW_COMPLETED':\r\n            return todos.filter(t => t.completed);\r\n        case 'SHOW_ACTIVE': \r\n            return todos.filter(t => !t.completed);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        todos: getVisibleTodos(state.todos, state.visibilityFilter)\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onTodoClick: id => {\r\n            dispatch(toggleTodo(id))\r\n        }\r\n    }\r\n}\r\n\r\nconst VisibleTodoList = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(TodoList);\r\n\r\nexport default VisibleTodoList;","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\"\r\n\r\nconst RemoveCompleted = ({ onClick }) => (\r\n    <a\r\n        href=\"\"\r\n        className=\"link link_active link_centered\"\r\n        onClick={e => {\r\n            e.preventDefault();\r\n            onClick();\r\n        }}\r\n    >\r\n        Remove completed\r\n    </a>\r\n)\r\n\r\nRemoveCompleted.propTypes = {\r\n    onClick: PropTypes.func.isRequired\r\n  }\r\n\r\nexport default RemoveCompleted;","import { connect } from \"react-redux\";\r\nimport { removeCompletedTodos } from \"../../actions\";\r\nimport RemoveCompleted from \"../../components/RemoveCompleted\";\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onClick: () => {\r\n            dispatch(removeCompletedTodos());\r\n        }\r\n    }\r\n}\r\n\r\nconst FilterLink = connect(\r\n    null,\r\n    mapDispatchToProps\r\n)(RemoveCompleted);\r\n\r\nexport default FilterLink;","import React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport Filter from \"../Filter\"\r\nimport Input from \"../../containers/Input\"\r\nimport VisibleTodoList from \"../../containers/VisibleTodoList\"\r\nimport RemoveCompletedLink from \"../../containers/RemoveCompletedLink\"\r\n\r\nfunction App({ hasTodos, hasCompleted }) {\r\n    return (\r\n      <div className=\"container\">\r\n        <Input />\r\n        {hasTodos && <Filter />}\r\n        {hasTodos && <VisibleTodoList />}\r\n        {hasCompleted && <RemoveCompletedLink />}\r\n      </div>\r\n    )\r\n}\r\n\r\nconst hasCompletedTodos = todos => {\r\n  for (let todo of todos ) {\r\n    if (todo.completed) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  hasTodos: state.todos.length > 0,\r\n  hasCompleted: hasCompletedTodos(state.todos)\r\n});\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const todos = (state = [], action) => {\r\n    switch (action.type) {\r\n        case \"ADD_TODO\": \r\n            return [\r\n                ...state,\r\n                {\r\n                    id: action.id,\r\n                    text: action.text,\r\n                    completed: false\r\n                }\r\n            ];\r\n        case \"TOGGLE_TODO\": \r\n            return state.map(todo => \r\n                todo.id === action.id ? { ...todo, completed: !todo.completed } : todo\r\n            );\r\n        case \"REMOVE_COMPLETED_TODOS\": \r\n                return state.filter(todo => !todo.completed );\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default todos;\r\n","import { VisibilityFilters } from \"../actions\";\r\n\r\nconst visibilityFilter = (state = VisibilityFilters.SHOW_ALL, action) => {\r\n    switch (action.type) {\r\n        case \"SET_VISIBILITY_FILTER\":\r\n            return action.filter;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default visibilityFilter;","import { combineReducers } from \"redux\";\r\nimport todos from \"./todos\";\r\nimport visibilityFilter from \"./visibilityFilter\";\r\n\r\nexport default combineReducers({\r\n    todos,\r\n    visibilityFilter\r\n});","import { createStore } from \"redux\"\r\nimport reducer from \"../reducers\"\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\"\r\nimport { render } from \"react-dom\"\r\nimport { Provider } from \"react-redux\"\r\nimport App from \"./components/App\"\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport store from './store';\r\n\r\nimport \"./scss/main.scss\";\r\n\r\nrender(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.register();\r\n"],"sourceRoot":""}